version: 2.1

workflows:
  build_and_test_and_deploy:
    jobs:
      - build:
          context:
            - org-global
            - keys
      - test:
          context:
            - org-global
            - keys
      - deploy:
          context:
            - org-global
            - keys

orbs:
  eb: circleci/aws-elastic-beanstalk@1.0.0
  aws-s3: circleci/aws-s3@3.0 

  aws-rds: ware2go/aws-rds@0.2.123

 
# Define the jobs we want to run for this project


jobs:
  build:
    docker:
      - image: andrewdass/hemia-1.0
        auth:
          username: andrewdass
          password: $DOCKERTOKEN  # context / project UI env-var reference
      - image: mysql:latest
        auth:
          username: andrewdass
          password: $DOCKERTOKEN
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd

          # MYSQL_ROOT_PASSWORD: rootpw
          # MYSQL_DATABASE: test_db
          # MYSQL_USER: user
          # MYSQL_PASSWORD: passw0rd  


    steps:
      - checkout
      - run: pip install --upgrade -r requirements.txt
      - run: apt-get update
      - run: pip3 install awsebcli --upgrade
      # - aws-s3/sync:
      #     arguments: |
      #       --acl public-read \
      #       --cache-control "max-age=86400"
      #     aws-access-key-id: AWS_ACCESS_KEY_ID
      #     aws-region: AWS_REGION
      #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      #     from: ./
      #     to: "s3://hemia"
      

      
        
  test:
    docker:
      - image: andrewdass/hemia-1.0
        auth:
          username: andrewdass
          password: $DOCKERTOKEN  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "Testing the application with pytest"
      # - run: python -m pytest
    
 
  deploy:
    docker:
      - image: andrewdass/hemia-1.0
        auth:
          username: andrewdass
          password: $DOCKERTOKEN  # context / project UI env-var reference  
    steps:
      - checkout
      - run: echo "Successful deployment"


